# -*- mode: ruby -*-
# vi: set ft=ruby :

# Specify Vagrant version and Vagrant API version
Vagrant.require_version ">= 1.6.0"
VAGRANTFILE_API_VERSION = "2"

Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|
  config.vm.hostname = "ops-host"
  config.vm.box_check_update = false
  config.ssh.insert_key = false
  config.vm.network "private_network", type: "dhcp"
  config.vm.box = "ubuntu/trusty64"

  config.vm.provision  "docker"
  config.vm.provision :reload

  if Vagrant.has_plugin?("vagrant-proxyconf")
     config.proxy.http = ENV['http_proxy']
     config.proxy.https = ENV['https_proxy']
     config.proxy.no_proxy = "localhost,127.0.0.1"
  end

  config.vm.provider "virtualbox" do |vb|

     host = RbConfig::CONFIG['host_os']

     # Give VM 1/4 system memory & access to all cpu cores on the host
     if host =~ /darwin/
        cpus = `sysctl -n hw.ncpu`.to_i
        # sysctl returns Bytes and we need to convert to MB
        mem = `sysctl -n hw.memsize`.to_i / 1024 / 1024 / 4
     elsif host =~ /linux/
        cpus = `nproc`.to_i
        # meminfo shows KB and we need to convert to MB
        mem = `grep 'MemTotal' /proc/meminfo | sed -e 's/MemTotal://' -e 's/ kB//'`.to_i / 1024 / 4
     else # Assume Windows
        cpus = ENV['NUMBER_OF_PROCESSORS']
        mem = /([0-9]+)/.match(`wmic os get TotalVisibleMemorySize`).captures[0].to_i / 1024 / 4
     end
     vb.name = "ops-host"
     vb.customize ["modifyvm", :id, "--memory", mem]
     vb.customize ["modifyvm", :id, "--cpus", cpus]
  end
  config.vm.provision "shell" do |s|
    s.path = 'vagrant.d/provisioner.sh'
    s.privileged = false
  end
end
